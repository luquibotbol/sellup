generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phone         String?
  accounts      Account[]
  sessions      Session[]
  listings      Listing[]
  paymentMethods PaymentMethod[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id       String    @id @default(cuid())
  name     String
  image    String?
  listings Listing[]
}

model Listing {
  id          String   @id @default(cuid())
  title       String
  description String?  @db.Text
  price       Float
  type        String   // 'sell' or 'ask'
  status      String   @default("OPEN") // 'OPEN', 'LOCKED', 'CLOSED'
  image       String?
  date        DateTime?
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  categoryId  String
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [categoryId], references: [id])
}

model PaymentMethod {
  id        String   @id @default(cuid())
  type      String   // 'PayPal', 'Venmo', 'Zelle', 'Apple Pay', 'Google Pay', 'Cash App'
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

